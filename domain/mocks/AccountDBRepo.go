// Code generated by mockery v2.2.1. DO NOT EDIT.

package mocks

import (
	domain "github.com/jmattson4/go-sample-api/domain"
	mock "github.com/stretchr/testify/mock"
)

// AccountDBRepo is an autogenerated mock type for the AccountDBRepo type
type AccountDBRepo struct {
	mock.Mock
}

// Construct provides a mock function with given fields: _a0
func (_m *AccountDBRepo) Construct(_a0 interface{}) interface{} {
	ret := _m.Called(_a0)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(interface{}) interface{}); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// Create provides a mock function with given fields: email, password
func (_m *AccountDBRepo) Create(email string, password string) error {
	ret := _m.Called(email, password)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(email, password)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAccount provides a mock function with given fields: u
func (_m *AccountDBRepo) GetAccount(u uint) *domain.Account {
	ret := _m.Called(u)

	var r0 *domain.Account
	if rf, ok := ret.Get(0).(func(uint) *domain.Account); ok {
		r0 = rf(u)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Account)
		}
	}

	return r0
}

// GetAccountByEmail provides a mock function with given fields: email
func (_m *AccountDBRepo) GetAccountByEmail(email string) *domain.Account {
	ret := _m.Called(email)

	var r0 *domain.Account
	if rf, ok := ret.Get(0).(func(string) *domain.Account); ok {
		r0 = rf(email)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Account)
		}
	}

	return r0
}
